{"version":3,"file":"static/js/404.3e35433e.chunk.js","mappings":"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","sources":["components/auth/Login/loginForm.js","components/auth/Login/constants.js","components/auth/Login/helpers.js","components/auth/Login/index.js","pages/auth/Login/index.js"],"sourcesContent":["import React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {\n  _SMALL,\n  _OUTLINE,\n  _PASSWORD,\n  _EMAIL,\n  _SUBMIT\n} from '../../../utils/Constants';\nimport { EMAIL, PASSWORD, LOGIN } from './constants';\nimport { Button, TextField } from '@mui/material';\n\nconst LoginForm = (props) => {\n  const { touched, errors, loading, values, handleSubmit, handleChange } =\n    props;\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\" id=\"login-submit\">\n      <div className=\"mb-4\">\n        <TextField\n          size={_SMALL}\n          fullWidth\n          variant={_OUTLINE}\n          className=\"custom-text-field\"\n          id=\"textfield-login-email\"\n          label={EMAIL}\n          type={_EMAIL}\n          name={_EMAIL}\n          onChange={handleChange}\n          value={values.email}\n          error={touched.email && Boolean(errors.email)}\n          helperText={touched.email && errors.email}\n        />\n      </div>\n      <div className=\"mb-3\">\n        <TextField\n          size={_SMALL}\n          fullWidth\n          variant={_OUTLINE}\n          className=\"custom-text-field\"\n          type={_PASSWORD}\n          autoComplete=\"new-password\"\n          name={_PASSWORD}\n          id=\"textfield-login-password\"\n          onChange={handleChange}\n          value={values.password}\n          label={PASSWORD}\n          error={touched.password && Boolean(errors.password)}\n          helperText={touched.password && errors.password}\n        />\n      </div>\n\n      <div className=\"text-center pt-2\">\n        <Button\n          disabled={loading}\n          type={_SUBMIT}\n          className=\"primary-btn\"\n          variant=\"contained\">\n          {loading ? (\n            <CircularProgress className=\"text-primary\" size={24} />\n          ) : (\n            LOGIN\n          )}\n        </Button>\n      </div>\n    </form>\n  );\n};\nexport default LoginForm;\n","export const _LOGIN_TO_YOUR_ACCOUNT = 'Login to your account';\nexport const LOGIN = 'Login';\nexport const LOGIN_WITH_GOOGLE = 'Login with Google';\nexport const EMAIL = 'Email*';\nexport const PASSWORD = 'Password*';\nexport const FORGOT_PASSWORD = 'Forgot password?';\nexport const SIGN_UP = 'Sign up';\nexport const EMAIL_NOT_FOUND = 'Sorry E-mail not Found!';\n","import * as Yup from 'yup';\nexport const LoginInitialValues = {\n  email: '',\n  password: ''\n};\nexport const ResetPassworfInitialValues = {\n  email: ''\n};\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!'),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters.')\n    .required('Password is required!')\n});\nexport const ForgetPasswordSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required!')\n});\n","import React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport ImageLight from '../../../assets/img/login-office.jpeg';\nimport ImageDark from '../../../assets/img/login-office-dark.jpeg';\nimport { AuthLogin } from '../../../services/auth';\nimport { Formik } from 'formik';\nimport LoginForm from './loginForm';\nimport { LoginInitialValues, LoginSchema } from './helpers';\nimport { success, error } from '../../shared/Helpers';\n\nconst Login = () => {\n  const [loading, setLoading] = useState(false);\n\n  const SubmitForm = useCallback(data => {\n    setLoading(true);\n    AuthLogin(data).then(res => {\n      if (res.status === 200) {\n        success(res.message);\n        window.location = '/dashboard';\n      } else {\n        error(res.message);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex-1 max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\n          <div className=\"flex flex-col overflow-y-auto md:flex-row\">\n            <div className=\"h-32 md:h-auto md:w-1/2\">\n              <img\n                aria-hidden=\"true\"\n                className=\"object-cover w-full h-full dark:hidden\"\n                src={ImageLight}\n                alt=\"Office\"\n              />\n              <img\n                aria-hidden=\"true\"\n                className=\"hidden object-cover w-full h-full dark:block\"\n                src={ImageDark}\n                alt=\"Office\"\n              />\n            </div>\n            <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\n              <div className=\"w-full\">\n                <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\n                  Login\n                </h1>\n                {/* login form start */}\n                <div>\n                  <Formik\n                    initialValues={LoginInitialValues}\n                    onSubmit={SubmitForm}\n                    validationSchema={LoginSchema}>\n                    {props => {\n                      return (\n                        <>\n                          <LoginForm\n                            loading={loading}\n                            setLoading={setLoading}\n                            {...props}\n                          />\n                        </>\n                      );\n                    }}\n                  </Formik>\n                </div>\n                {/* login form end */}\n                <hr className=\"my-8\" />\n                <p className=\"mt-4\">\n                  <Link\n                    className=\"text-sm font-medium text-primary\"\n                    to=\"/forgot-password\">\n                    Forgot your password?\n                  </Link>\n                </p>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport Login from '../../../components/auth/Login';\n\nconst LoginPage = () => {\n  return <Login />;\n};\n\nexport default LoginPage;\n"],"names":["props","touched","errors","loading","values","handleSubmit","handleChange","onSubmit","autoComplete","id","className","TextField","size","_SMALL","fullWidth","variant","_OUTLINE","label","type","_EMAIL","name","onChange","value","email","error","Boolean","helperText","_PASSWORD","password","Button","disabled","_SUBMIT","CircularProgress","LoginInitialValues","LoginSchema","Yup","shape","required","min","useState","setLoading","SubmitForm","useCallback","data","AuthLogin","then","res","status","success","message","window","location","src","ImageLight","alt","ImageDark","initialValues","validationSchema","to"],"sourceRoot":""}